# ============================================================================
# AgentBay SDK + CrewAI Environment Configuration
# ============================================================================
# Copy this file to .env and fill in your actual values
# ============================================================================

# ----------------------------------------------------------------------------
# Required: AgentBay SDK Configuration
# ----------------------------------------------------------------------------
# AgentBay API Key for cloud code execution
# Get it from: https://agentbay.console.aliyun.com/service-management
AGENTBAY_API_KEY=your_agentbay_api_key_here


# ----------------------------------------------------------------------------
# Required: LLM Configuration (Choose ONE option below)
# ----------------------------------------------------------------------------

# Option 1: OpenAI (Default)
# ---------------------------
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here
# OPENAI_MODEL_NAME=gpt-4o-mini


# Option 2: Alibaba Cloud Bailian (阿里云百炼)
# --------------------------------------------
# Get your key from: https://bailian.console.aliyun.com/
# Uncomment the following lines to use Bailian:
# OPENAI_API_KEY=your_dashscope_api_key_here
# OPENAI_API_BASE=https://dashscope.aliyuncs.com/compatible-mode/v1
# OPENAI_MODEL_NAME=openai/qwen-plus
# Available models: openai/qwen-turbo, openai/qwen-plus, openai/qwen-max, openai/qwen-max-longcontext
# Note: Use 'openai/' prefix to tell LiteLLM this is an OpenAI-compatible endpoint


# Option 3: Azure OpenAI
# ----------------------
# Uncomment and configure if using Azure OpenAI:
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_KEY=your_azure_openai_key
# AZURE_OPENAI_DEPLOYMENT=your_deployment_name
# OPENAI_API_VERSION=2024-02-15-preview


# Option 4: Custom OpenAI-Compatible API
# ---------------------------------------
# For API proxies, local LLMs (Ollama, LM Studio), etc.
# Uncomment and configure:
# OPENAI_API_KEY=your_custom_api_key
# OPENAI_API_BASE=https://your-custom-endpoint.com/v1
# OPENAI_MODEL_NAME=your_model_name


# Option 5: Local LLM (Ollama)
# ----------------------------
# Uncomment and configure if using Ollama:
# OPENAI_API_KEY=ollama
# OPENAI_API_BASE=http://localhost:11434/v1
# OPENAI_MODEL_NAME=llama2


# ----------------------------------------------------------------------------
# Optional: Additional Configuration
# ----------------------------------------------------------------------------

# Logging level (DEBUG, INFO, WARNING, ERROR)
# LOG_LEVEL=INFO

# Request timeout in seconds
# REQUEST_TIMEOUT=60

# Enable verbose output for debugging
# VERBOSE=true


# ============================================================================
# Quick Start Examples
# ============================================================================

# Example 1: OpenAI (Most common)
# --------------------------------
# AGENTBAY_API_KEY=sk-ab12cd34ef56...
# OPENAI_API_KEY=sk-proj-xyz123...
# OPENAI_MODEL_NAME=gpt-4o-mini

# Example 2: Alibaba Bailian (Recommended for China)
# ---------------------------------------------------
# AGENTBAY_API_KEY=sk-ab12cd34ef56...
# OPENAI_API_KEY=sk-xyz123...
# OPENAI_API_BASE=https://dashscope.aliyuncs.com/compatible-mode/v1
# OPENAI_MODEL_NAME=openai/qwen-plus

# Example 3: Azure OpenAI
# -----------------------
# AGENTBAY_API_KEY=sk-ab12cd34ef56...
# AZURE_OPENAI_ENDPOINT=https://my-resource.openai.azure.com/
# AZURE_OPENAI_API_KEY=abc123def456...
# AZURE_OPENAI_DEPLOYMENT=gpt-4
# OPENAI_API_VERSION=2024-02-15-preview


# ============================================================================
# Notes
# ============================================================================
# 1. Copy this file: cp env.example .env
# 2. Fill in your actual API keys (never commit .env to git!)
# 3. At minimum, you need: AGENTBAY_API_KEY and OPENAI_API_KEY
# 4. Choose ONE LLM provider option above
# 5. For Bailian/Azure/Custom endpoints, also set OPENAI_API_BASE

